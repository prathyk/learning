<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract method &apos;private void handleDoubleNext(int pins)&apos; from &apos;example.bowling.BowlingGame.roll()&apos; to &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Original project: &apos;Bowling&apos;&#x0D;&#x0A;- Method name: &apos;handleDoubleNext&apos;&#x0D;&#x0A;- Destination type: &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;handleDoubleNext&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;example.bowling{BowlingGame.java" name="handleDoubleNext" replace="false" selection="298 165" stamp="1427981451014" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void addRegularPinValue(int pins)&apos; from &apos;example.bowling.BowlingGame.roll()&apos; to &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Original project: &apos;Bowling&apos;&#x0D;&#x0A;- Method name: &apos;addRegularPinValue&apos;&#x0D;&#x0A;- Destination type: &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;addRegularPinValue&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;example.bowling{BowlingGame.java" name="addRegularPinValue" replace="false" selection="329 45" stamp="1427981469076" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private boolean isStrike(int pins)&apos; from &apos;example.bowling.BowlingGame.roll()&apos; to &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Original project: &apos;Bowling&apos;&#x0D;&#x0A;- Method name: &apos;isStrike&apos;&#x0D;&#x0A;- Destination type: &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;&#x0D;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;isStrike&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;example.bowling{BowlingGame.java" name="isStrike" replace="true" selection="365 44" stamp="1427981489767" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private boolean isSpare(int pins)&apos; from &apos;example.bowling.BowlingGame.roll()&apos; to &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Original project: &apos;Bowling&apos;&#x0D;&#x0A;- Method name: &apos;isSpare&apos;&#x0D;&#x0A;- Destination type: &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;isSpare&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;example.bowling{BowlingGame.java" name="isSpare" replace="false" selection="415 67" stamp="1427981503793" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void advanceFrameCount(int pins)&apos; from &apos;example.bowling.BowlingGame.roll()&apos; to &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Original project: &apos;Bowling&apos;&#x0D;&#x0A;- Method name: &apos;advanceFrameCount&apos;&#x0D;&#x0A;- Destination type: &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;advanceFrameCount&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;example.bowling{BowlingGame.java" name="advanceFrameCount" replace="false" selection="461 79" stamp="1427981532877" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void adjustDoubleNext(int pins)&apos; from &apos;example.bowling.BowlingGame.roll()&apos; to &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Original project: &apos;Bowling&apos;&#x0D;&#x0A;- Method name: &apos;adjustDoubleNext&apos;&#x0D;&#x0A;- Destination type: &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;adjustDoubleNext&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;example.bowling{BowlingGame.java" name="adjustDoubleNext" replace="false" selection="362 91" stamp="1427981544908" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void setupForNextRoll(int pins)&apos; from &apos;example.bowling.BowlingGame.roll()&apos; to &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Original project: &apos;Bowling&apos;&#x0D;&#x0A;- Method name: &apos;setupForNextRoll&apos;&#x0D;&#x0A;- Destination type: &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;setupForNextRoll&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;example.bowling{BowlingGame.java" name="setupForNextRoll" replace="false" selection="362 79" stamp="1427981598787" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void handleCurrentRoll(int pins)&apos; from &apos;example.bowling.BowlingGame.roll()&apos; to &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Original project: &apos;Bowling&apos;&#x0D;&#x0A;- Method name: &apos;handleCurrentRoll&apos;&#x0D;&#x0A;- Destination type: &apos;example.bowling.BowlingGame&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;handleCurrentRoll&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;example.bowling{BowlingGame.java" name="handleCurrentRoll" replace="false" selection="298 52" stamp="1427981616186" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract local variable &apos;i&apos; from expression &apos;12&apos;&#x0D;&#x0A;- Original project: &apos;Bowling&apos;&#x0D;&#x0A;- Variable name: &apos;i&apos;&#x0D;&#x0A;- Destination method: &apos;example.bowling.TestBowlingGame.scoreShouldBe12WhenOnly4RollsAre3s()&apos;&#x0D;&#x0A;- Variable expression: &apos;12&apos;" description="Extract local variable &apos;i&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;example.bowling{TestBowlingGame.java" name="i" replace="false" selection="2030 2" stamp="1427983852528" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private void assertThatScoreShouldBe(int i)&apos; from &apos;example.bowling.TestBowlingGame.scoreShouldBe12WhenOnly4RollsAre3s()&apos; to &apos;example.bowling.TestBowlingGame&apos;&#x0D;&#x0A;- Original project: &apos;Bowling&apos;&#x0D;&#x0A;- Method name: &apos;assertThatScoreShouldBe&apos;&#x0D;&#x0A;- Destination type: &apos;example.bowling.TestBowlingGame&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;assertThatScoreShouldBe&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;example.bowling{TestBowlingGame.java" name="assertThatScoreShouldBe" replace="false" selection="2006 44" stamp="1427983872222" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline local variable &apos;example.bowling.TestBowlingGame.scoreShouldBe12WhenOnly4RollsAre3s().i&apos; in &apos;example.bowling.TestBowlingGame.scoreShouldBe12WhenOnly4RollsAre3s()&apos;&#x0D;&#x0A;- Original project: &apos;Bowling&apos;&#x0D;&#x0A;- Original element: &apos;example.bowling.TestBowlingGame.scoreShouldBe12WhenOnly4RollsAre3s().i&apos;" description="Inline local variable &apos;i&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;example.bowling{TestBowlingGame.java" selection="2030 0" stamp="1427983890957" version="1.0"/>
</session>