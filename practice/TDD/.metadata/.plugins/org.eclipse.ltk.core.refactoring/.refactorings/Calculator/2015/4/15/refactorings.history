<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Convert local variable &apos;com.pega.techtalk.CalculatorTest.ShouldAnswer3WhenIEnter3().calculator&apos; in &apos;com.pega.techtalk.CalculatorTest.ShouldAnswer3WhenIEnter3()&apos; to field&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;com.pega.techtalk.CalculatorTest.ShouldAnswer3WhenIEnter3().calculator&apos;&#x0D;&#x0A;- Field name: &apos;calculator&apos;&#x0D;&#x0A;- Initialize field in method&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" description="Convert local variable &apos;calculator&apos; to field" final="false" flags="2" id="org.eclipse.jdt.ui.promote.temp" initialize="1" input="/src&lt;com.pega.techtalk{CalculatorTest.java" name="calculator" selection="459 29" stamp="1428479395458" static="false" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void assertThatAnswerIs(int value)&apos; from &apos;com.pega.techtalk.CalculatorTest.ShouldAnswer3WhenIEnter3()&apos; to &apos;com.pega.techtalk.CalculatorTest&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;assertThatAnswerIs&apos;&#x0D;&#x0A;- Destination type: &apos;com.pega.techtalk.CalculatorTest&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;assertThatAnswerIs&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.pega.techtalk{CalculatorTest.java" name="assertThatAnswerIs" replace="false" selection="590 52" stamp="1428479471577" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline local variable &apos;com.pega.techtalk.CalculatorTest.ShouldAnswer3WhenIEnter3().value&apos; in &apos;com.pega.techtalk.CalculatorTest.ShouldAnswer3WhenIEnter3()&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;com.pega.techtalk.CalculatorTest.ShouldAnswer3WhenIEnter3().value&apos;" description="Inline local variable &apos;value&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;com.pega.techtalk{CalculatorTest.java" selection="576 5" stamp="1428479477932" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;value&apos; in &apos;com.pega.techtalk.Calculator&apos; to &apos;operation&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;com.pega.techtalk.Calculator.value&apos;&#x0D;&#x0A;- Renamed element: &apos;com.pega.techtalk.Calculator.operation&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;value&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;com.pega.techtalk{Calculator.java[Calculator^value" name="operation" references="true" setter="false" stamp="1428479789968" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private boolean isNumeric(String token)&apos; from &apos;com.pega.techtalk.Calculator.evaluate()&apos; to &apos;com.pega.techtalk.Calculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;isNumeric&apos;&#x0D;&#x0A;- Destination type: &apos;com.pega.techtalk.Calculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;isNumeric&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.pega.techtalk{Calculator.java" name="isNumeric" replace="false" selection="322 21" stamp="1428480355944" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private String [] parseOperation(String operation)&apos; from &apos;com.pega.techtalk.Calculator.evaluate()&apos; to &apos;com.pega.techtalk.Calculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;parseOperation&apos;&#x0D;&#x0A;- Destination type: &apos;com.pega.techtalk.Calculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;parseOperation&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.pega.techtalk{Calculator.java" name="parseOperation" replace="false" selection="261 20" stamp="1428480405690" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private int executeOperation(int value, char operator, String token)&apos; from &apos;com.pega.techtalk.Calculator.evaluate()&apos; to &apos;com.pega.techtalk.Calculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;executeOperation&apos;&#x0D;&#x0A;- Destination type: &apos;com.pega.techtalk.Calculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;executeOperation&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.pega.techtalk{Calculator.java" name="executeOperation" replace="false" selection="377 237" stamp="1428480923109" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Convert local variable &apos;com.pega.techtalk.Calculator.evaluate().tokens&apos; in &apos;com.pega.techtalk.Calculator.evaluate()&apos; to field&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;com.pega.techtalk.Calculator.evaluate().tokens&apos;&#x0D;&#x0A;- Field name: &apos;tokens&apos;&#x0D;&#x0A;- Initialize field in method&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" description="Convert local variable &apos;tokens&apos; to field" final="false" flags="2" id="org.eclipse.jdt.ui.promote.temp" initialize="1" input="/src&lt;com.pega.techtalk{Calculator.java" name="tokens" selection="277 34" stamp="1428481396309" static="false" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Move method &apos;com.pega.techtalk.Calculator.parseOperation(...)&apos; to &apos;com.pega.techtalk.Calculator.parser&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;com.pega.techtalk.Calculator.parseOperation(...)&apos;&#x0D;&#x0A;- Moved method: N/A&#x0D;&#x0A;- Target element: &apos;com.pega.techtalk.Calculator.parser&apos;&#x0D;&#x0A;- Method name: &apos;parseOperation&apos;" deprecate="true" description="Move method &apos;parseOperation&apos;" flags="786438" getter="true" id="org.eclipse.jdt.ui.move.method" inline="true" input="/src&lt;com.pega.techtalk{Calculator.java[Calculator~parseOperation~QString;" name="parseOperation" remove="true" setter="true" stamp="1428481760273" targetIndex="0" targetName="calculator" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;value&apos; in &apos;com.pega.techtalk.Calculator.executeOperation(...)&apos; to &apos;left&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;com.pega.techtalk.Calculator.executeOperation(int, char, int).value&apos;&#x0D;&#x0A;- Renamed element: &apos;value&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;value&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.pega.techtalk{Calculator.java[Calculator~executeOperation~I~C~I@value!550!558!554!558!I!0!true" name="left" references="true" stamp="1428481841938" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;left&apos; in &apos;com.pega.techtalk.Calculator.executeOperation(...)&apos; to &apos;leftOperand&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;com.pega.techtalk.Calculator.executeOperation(int, char, int).left&apos;&#x0D;&#x0A;- Renamed element: &apos;left&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;left&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.pega.techtalk{Calculator.java[Calculator~executeOperation~I~C~I@left!550!557!554!557!I!0!true" name="leftOperand" references="true" stamp="1428481849472" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;newValue&apos; in &apos;com.pega.techtalk.Calculator.executeOperation(...)&apos; to &apos;rightOperand&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;com.pega.techtalk.Calculator.executeOperation(int, char, int).newValue&apos;&#x0D;&#x0A;- Renamed element: &apos;newValue&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;newValue&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.pega.techtalk{Calculator.java[Calculator~executeOperation~I~C~I@newValue!582!593!586!593!I!0!true" name="rightOperand" references="true" stamp="1428481859044" version="1.0"/>&#x0A;<refactoring comment="Convert local variable &apos;ASimpleCalculator.ShouldAnswer3WhenIGive3().calculator&apos; in &apos;ASimpleCalculator.ShouldAnswer3WhenIGive3()&apos; to field&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;ASimpleCalculator.ShouldAnswer3WhenIGive3().calculator&apos;&#x0D;&#x0A;- Field name: &apos;calculator&apos;&#x0D;&#x0A;- Initialize field in method&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" description="Convert local variable &apos;calculator&apos; to field" final="false" flags="2" id="org.eclipse.jdt.ui.promote.temp" initialize="1" input="/src&lt;{ASimpleCalculator.java" name="calculator" selection="433 29" stamp="1428577187309" static="false" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void assertThatAnswerIs(int value)&apos; from &apos;ASimpleCalculator.ShouldAnswer3WhenIGive3()&apos; to &apos;ASimpleCalculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;assertThatAnswerIs&apos;&#x0D;&#x0A;- Destination type: &apos;ASimpleCalculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;assertThatAnswerIs&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{ASimpleCalculator.java" name="assertThatAnswerIs" replace="false" selection="562 52" stamp="1428577292137" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline local variable &apos;ASimpleCalculator.ShouldAnswer3WhenIGive3().value&apos; in &apos;ASimpleCalculator.ShouldAnswer3WhenIGive3()&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;ASimpleCalculator.ShouldAnswer3WhenIGive3().value&apos;" description="Inline local variable &apos;value&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;{ASimpleCalculator.java" selection="550 0" stamp="1428577300409" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;Calculator.enter(...)&apos; to &apos;enterValue&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;Calculator.enter(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;Calculator.enterValue(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;enter&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{Calculator.java[Calculator~enter~I" name="enterValue" references="true" stamp="1428577350656" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private void parseExpression()&apos; from &apos;ASimpleCalculator.ShouldGive6WhenIGive1Plus2Plus3()&apos; to &apos;ASimpleCalculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;parseExpression&apos;&#x0D;&#x0A;- Destination type: &apos;ASimpleCalculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;parseExpression&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{ASimpleCalculator.java" name="parseExpression" replace="false" selection="928 151" stamp="1428578228532" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename method &apos;ASimpleCalculator.parseExpression(...)&apos; to &apos;parseAndEnterInCalculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;ASimpleCalculator.parseExpression(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;ASimpleCalculator.parseAndEnterInCalculator(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;parseExpression&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{ASimpleCalculator.java[ASimpleCalculator~parseExpression~QString;" name="parseAndEnterInCalculator" references="true" stamp="1428578485358" version="1.0"/>&#x0A;<refactoring abstract="1" comment="Pull up members from &apos;Add&apos; to &apos;BinaryOperation&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Destination type: &apos;BinaryOperation&apos;&#x0D;&#x0A;- Use super type where possible" delete="0" description="Pull up members to &apos;BinaryOperation&apos;" element1="/src&lt;{Add.java[Add~execute~I~I" flags="589830" id="org.eclipse.jdt.ui.pull.up" input="/src&lt;{BinaryOperation.java[BinaryOperation" instanceof="false" pull="0" replace="true" stamp="1428579252411" stubs="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;equal&apos; from expression &apos;new Equal()&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Variable name: &apos;equal&apos;&#x0D;&#x0A;- Destination method: &apos;Calculator.enterValue()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Equal()&apos;" description="Extract local variable &apos;equal&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Calculator.java" name="equal" replace="false" selection="212 11" stamp="1428579535666" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;equal&apos; in &apos;Calculator.enterValue(...)&apos; to &apos;operation&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;Calculator.enterValue(int).equal&apos;&#x0D;&#x0A;- Renamed element: &apos;equal&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;equal&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{Calculator.java[Calculator~enterValue~I@equal!199!234!215!219!QBinaryOperation;!0!false" name="operation" references="true" stamp="1428579555319" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private BinaryOperation getOperation()&apos; from &apos;Calculator.enterValue()&apos; to &apos;Calculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;getOperation&apos;&#x0D;&#x0A;- Destination type: &apos;Calculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;getOperation&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{Calculator.java" name="getOperation" replace="false" selection="166 173" stamp="1428579791708" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void evaluateResult(int value)&apos; from &apos;Calculator.enterValue()&apos; to &apos;Calculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;evaluateResult&apos;&#x0D;&#x0A;- Destination type: &apos;Calculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;evaluateResult&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{Calculator.java" name="evaluateResult" replace="false" selection="374 49" stamp="1428580471246" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename local variable &apos;value&apos; in &apos;Calculator.evaluateResult()&apos; to &apos;right&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;Calculator.evaluateResult().value&apos;&#x0D;&#x0A;- Renamed element: &apos;value&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;value&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{Calculator.java[Calculator~evaluateResult@value!435!460!439!443!I!0!false" name="right" references="true" stamp="1428580692646" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private void executeSingleOperation()&apos; from &apos;Calculator.evaluateResult()&apos; to &apos;Calculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;executeSingleOperation&apos;&#x0D;&#x0A;- Destination type: &apos;Calculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;executeSingleOperation&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{Calculator.java" name="executeSingleOperation" replace="false" selection="427 462" stamp="1428582592584" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename method &apos;Calculator.executeSingleOperation()&apos; to &apos;executeNextSingleOperation&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;Calculator.executeSingleOperation()&apos;&#x0D;&#x0A;- Renamed element: &apos;Calculator.executeNextSingleOperation()&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;executeSingleOperation&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{Calculator.java[Calculator~executeSingleOperation" name="executeNextSingleOperation" references="true" stamp="1428582730121" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;b&apos; from expression &apos;nextOperator.compareTo(operator) &gt; 0&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Variable name: &apos;b&apos;&#x0D;&#x0A;- Destination method: &apos;Calculator.executeNextSingleOperation()&apos;&#x0D;&#x0A;- Variable expression: &apos;nextOperator.compareTo(operator) &gt; 0&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;b&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Calculator.java" name="b" replace="true" selection="767 35" stamp="1428582759334" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private boolean nextOperatorHasGreaterPrecedence(BinaryOperation operator)&apos; from &apos;Calculator.executeNextSingleOperation()&apos; to &apos;Calculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;nextOperatorHasGreaterPrecedence&apos;&#x0D;&#x0A;- Destination type: &apos;Calculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;nextOperatorHasGreaterPrecedence&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{Calculator.java" name="nextOperatorHasGreaterPrecedence" replace="false" selection="679 133" stamp="1428582801755" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline local variable &apos;Calculator.executeNextSingleOperation().b&apos; in &apos;Calculator.executeNextSingleOperation()&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;Calculator.executeNextSingleOperation().b&apos;" description="Inline local variable &apos;b&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;{Calculator.java" selection="687 0" stamp="1428582809226" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;Calculator.nextOperatorHasGreaterPrecedence(...)&apos; to &apos;nextOperatorHasGreaterPrecedenceThanThis&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;Calculator.nextOperatorHasGreaterPrecedence(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;Calculator.nextOperatorHasGreaterPrecedenceThanThis(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;nextOperatorHasGreaterPrecedence&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{Calculator.java[Calculator~nextOperatorHasGreaterPrecedence~QBinaryOperation;" name="nextOperatorHasGreaterPrecedenceThanThis" references="true" stamp="1428582825488" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private int executeNextOperator(int left)&apos; from &apos;Calculator.executeNextSingleOperation()&apos; to &apos;Calculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;executeNextOperator&apos;&#x0D;&#x0A;- Destination type: &apos;Calculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;executeNextOperator&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{Calculator.java" name="executeNextOperator" replace="false" selection="739 79" stamp="1428582876367" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private int executeNextOperationIfRequired(int left, BinaryOperation operator)&apos; from &apos;Calculator.executeNextSingleOperation()&apos; to &apos;Calculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;executeNextOperationIfRequired&apos;&#x0D;&#x0A;- Destination type: &apos;Calculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;executeNextOperationIfRequired&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{Calculator.java" name="executeNextOperationIfRequired" replace="false" selection="679 98" stamp="1428582896991" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline method &apos;Calculator.executeNextOperator()&apos; in &apos;Calculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;Calculator.executeNextOperator()&apos;&#x0D;&#x0A;- Remove method declaration&#x0D;&#x0A;- Replace all references to method with statements" delete="true" description="Inline method &apos;executeNextOperator&apos;" flags="786434" id="org.eclipse.jdt.ui.inline.method" input="/src&lt;{Calculator.java" mode="1" selection="984 0" stamp="1428583117477" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;Calculator.executeNextSingleOperation()&apos; to &apos;executeNextOperator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;Calculator.executeNextSingleOperation()&apos;&#x0D;&#x0A;- Renamed element: &apos;Calculator.executeNextOperator()&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;executeNextSingleOperation&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;{Calculator.java[Calculator~executeNextSingleOperation" name="executeNextOperator" references="true" stamp="1428583128519" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private BinaryOperation popOperator()&apos; from &apos;Calculator.executeNextOperator()&apos; to &apos;Calculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;popOperator&apos;&#x0D;&#x0A;- Destination type: &apos;Calculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;popOperator&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{Calculator.java" name="popOperator" replace="false" selection="560 49" stamp="1428583169364" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private BinaryOperation peekOperator()&apos; from &apos;Calculator.nextOperatorHasGreaterPrecedenceThanThis()&apos; to &apos;Calculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;peekOperator&apos;&#x0D;&#x0A;- Destination type: &apos;Calculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;peekOperator&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{Calculator.java" name="peekOperator" replace="false" selection="1145 49" stamp="1428583195662" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Convert local variable &apos;ASimpleCalculator.ShouldAnswer0WhenNoInput().calculator&apos; in &apos;ASimpleCalculator.ShouldAnswer0WhenNoInput()&apos; to field&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;ASimpleCalculator.ShouldAnswer0WhenNoInput().calculator&apos;&#x0D;&#x0A;- Field name: &apos;calculator&apos;&#x0D;&#x0A;- Initialize field in method&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" description="Convert local variable &apos;calculator&apos; to field" final="false" flags="2" id="org.eclipse.jdt.ui.promote.temp" initialize="1" input="/src&lt;{ASimpleCalculator.java" name="calculator" selection="338 29" stamp="1428662396319" static="false" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void assertThatAnswerIs(int value)&apos; from &apos;ASimpleCalculator.ShouldAnswer5WhenIEnter5()&apos; to &apos;ASimpleCalculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;assertThatAnswerIs&apos;&#x0D;&#x0A;- Destination type: &apos;ASimpleCalculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;assertThatAnswerIs&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{ASimpleCalculator.java" name="assertThatAnswerIs" replace="false" selection="558 52" stamp="1428662454189" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline local variable &apos;ASimpleCalculator.ShouldAnswer5WhenIEnter5().value&apos; in &apos;ASimpleCalculator.ShouldAnswer5WhenIEnter5()&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;ASimpleCalculator.ShouldAnswer5WhenIEnter5().value&apos;" description="Inline local variable &apos;value&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;{ASimpleCalculator.java" selection="545 0" stamp="1428662468000" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private void parseExpression()&apos; from &apos;ASimpleCalculator.ShouldAnswer5WhenIGive2Plus3()&apos; to &apos;ASimpleCalculator&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Method name: &apos;parseExpression&apos;&#x0D;&#x0A;- Destination type: &apos;ASimpleCalculator&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;&#x0D;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;parseExpression&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;{ASimpleCalculator.java" name="parseExpression" replace="true" selection="725 78" stamp="1428663035955" version="1.0" visibility="2"/>&#x0A;<refactoring abstract="true" comment="Extract interface &apos;BinaryOperation&apos; from &apos;Add&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;Add&apos;&#x0D;&#x0A;- Extracted interface: &apos;BinaryOperation&apos;&#x0D;&#x0A;- Extracted members:&#x0D;&#x0A;     Add.execute(...)&#x0D;&#x0A;- Use super type where possible" comments="true" description="Extract interface &apos;BinaryOperation&apos;" element1="/src&lt;{Add.java[Add~execute~I~I" flags="589830" id="org.eclipse.jdt.ui.extract.interface" input="/src&lt;{Add.java[Add" instanceof="false" name="BinaryOperation" public="true" replace="true" stamp="1428663607413" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;Multiply&apos; to &apos;NoOp&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Original element: &apos;Multiply&apos;&#x0D;&#x0A;- Renamed element: &apos;NoOp&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Multiply&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;{Multiply.java[Multiply" matchStrategy="1" name="NoOp" qualified="false" references="true" similarDeclarations="false" stamp="1428663745144" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;add&apos; from expression &apos;new Add()&apos;&#x0D;&#x0A;- Original project: &apos;Calculator&apos;&#x0D;&#x0A;- Variable name: &apos;add&apos;&#x0D;&#x0A;- Destination method: &apos;Calculator.enter()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Add()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;add&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Calculator.java" name="add" replace="true" selection="211 9" stamp="1428663790849" version="1.0"/>
</session>